@model IEnumerable<PerfumeShop.Core.Entities.Order>

@{
    ViewData["Title"] = "My Orders";
}

<div class="container">
    <h1>@ViewData["Title"]</h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            You have not placed any orders yet.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Order Number</th>
                        <th>Date</th>
                        <th>Status</th>
                        <th>Total Amount</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.OrderNumber</td>
                            <td>@item.OrderDate.ToString("dd.MM.yyyy HH:mm")</td>
                            <td>
                                @switch (item.Status)
                                {
                                    case PerfumeShop.Core.Entities.OrderStatus.Pending:
                                        <span class="badge badge-warning">Pending</span>
                                        break;
                                    case PerfumeShop.Core.Entities.OrderStatus.Processing:
                                        <span class="badge badge-info">Processing</span>
                                        break;
                                    case PerfumeShop.Core.Entities.OrderStatus.Shipped:
                                        <span class="badge badge-primary">Shipped</span>
                                        break;
                                    case PerfumeShop.Core.Entities.OrderStatus.Delivered:
                                        <span class="badge badge-success">Delivered</span>
                                        break;
                                    case PerfumeShop.Core.Entities.OrderStatus.Cancelled:
                                        <span class="badge badge-danger">Cancelled</span>
                                        break;
                                }
                            </td>
                            <td>@item.TotalAmount.ToString("C")</td>
                            <td>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Details</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div> 